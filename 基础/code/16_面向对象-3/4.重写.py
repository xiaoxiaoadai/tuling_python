# -*- coding: utf-8 -*-
# @Author  : 顾安
# @File    : 4.重写.py
# @Software: PyCharm
# @Time    : 2023/11/8 20:23


"""
类的四大特征
    重写 重载 多态 继承
"""


class Father:
    def play_game(self):
        print('父类中的玩游戏方法...')


class Son(Father):
    def play_game(self):
        print('子类中的玩游戏的方法...')


"""
子类中如果存在一个方法, 并且方法名与继承的父类方法一致
    子类重写了父类的方法
    
    子类调用父类中的重写方法后, 不会查询父类中的方法, 而是找自身方法
    
如果父类提供的方法不能满足当前编程需求, 那么可以考虑重写父类方法的方式进行方法覆盖
"""


son = Son()
son.play_game()

"""
1.重写是在父类方法不满足需求的时候可以使用
2.如果父类方法不满足当前编程需求, 一定要修改当前这个父类继承的子类
    方法一定是修改子类的, 修改父类会造成继承的子类全部受影响
        如果父类中的代码被修改, 子类没有重写, 那么所有子类运行的结果全部都是修改后的结果
"""